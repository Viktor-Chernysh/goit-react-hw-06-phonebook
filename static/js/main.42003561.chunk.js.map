{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Section/Section.js","components/Filter/Filter.js","redux/contacts/actions.js","components/Form/Form.js","components/Contacts/Contacts.js","App.js","redux/contacts/reducers.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","Section","props","children","className","s","section","connect","dispatch","onAddFilter","value","type","payload","addFilter","inputId","uuidv4","filter","id","name","onChange","e","target","trim","nameInputId","numberInputId","onAddContact","useState","setName","number","setNumber","handleChange","form","onSubmit","preventDefault","contactObject","htmlFor","pattern","title","required","input","button","state","contacts","items","onDelete","deleteContact","contact_list","el","toLowerCase","includes","map","contact_item","onClick","length","initContacts","contactReducer","combineReducers","addedName","addedNumber","alert","rootReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42003561.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"Contacts_contact_list__3Nz54\",\"contact_item\":\"Contacts_contact_item__ElylL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3KEUc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__xko5d\"};","import s from './Section.module.css';\r\nfunction Section(props) {\r\n  const { children } = props;\r\n  return <section className={s.section}>{children}</section>;\r\n}\r\nexport default Section;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\n\r\nimport s from './Filter.module.css';\r\nimport { addFilter } from '../../redux/contacts/actions';\r\n\r\nfunction Filter({ onAddFilter }) {\r\n  const inputId = uuidv4();\r\n  const addFilter = e => {\r\n    onAddFilter(e.target.value.trim());\r\n  };\r\n  return (\r\n    <label className={s.filter}>\r\n      <div>Find contact by name</div>\r\n      <input type=\"text\" id={inputId} name=\"filter\" onChange={addFilter} />\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddFilter: value => dispatch(addFilter(value)),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","export const addNewContact = contact => ({\r\n  type: 'contact/getContact',\r\n  payload: contact,\r\n});\r\n\r\nexport const deleteContact = id => ({\r\n  type: 'contact/deleteContact',\r\n  payload: id,\r\n});\r\n\r\nexport const addFilter = value => ({\r\n  type: 'contact/getFilter',\r\n  payload: value,\r\n});\r\n","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport s from './Form.module.css';\r\nimport * as actions from '../../redux/contacts/actions';\r\n\r\nconst nameInputId = uuidv4();\r\nconst numberInputId = uuidv4();\r\n\r\nfunction Form({ onAddContact }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const contactObject = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n    resetForm();\r\n    onAddContact(contactObject);\r\n  };\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value.trim());\r\n        break;\r\n      case 'number':\r\n        setNumber(value.trim());\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  function resetForm() {\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label htmlFor={nameInputId}>Name</label>\r\n      <input\r\n        id={nameInputId}\r\n        value={name}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <label htmlFor={numberInputId}>Number</label>\r\n      <input\r\n        className={s.input}\r\n        id={numberInputId}\r\n        value={number}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddContact: value => dispatch(actions.addNewContact(value)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport s from './Contacts.module.css';\r\nimport { deleteContact } from '../../redux/contacts/actions';\r\nfunction Contacts({ contacts, filter, onDelete }) {\r\n  const filteredContacts = () => {\r\n    if (filter === '') {\r\n      return contacts;\r\n    }\r\n    return contacts.filter(el =>\r\n      el.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ol className={s.contact_list}>\r\n      {filteredContacts().map(({ id, name, number }) => (\r\n        <li className={s.contact_item} key={id}>\r\n          {name}:<span>{number}</span>{' '}\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              onDelete(id);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  );\r\n}\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array,\r\n  deleteContact: PropTypes.func,\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDelete: id => dispatch(deleteContact(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import './App.css';\r\nimport Section from './components/Section/Section';\r\nimport Filter from './components/Filter/Filter';\r\nimport Form from './components/Form';\r\nimport Contacts from './components/Contacts/Contacts';\r\n// import useLocalStorage from './hooks/useLocaleStorage';\r\nimport { connect } from 'react-redux';\r\n// import store from './redux/store';\r\n\r\n// const contactsArr = [\r\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n// ];\r\n\r\nfunction App({ contacts }) {\r\n  return (\r\n    <>\r\n      <Section>\r\n        <h1>Phonebook</h1>\r\n        <Form />\r\n      </Section>\r\n      {contacts.length > 0 && (\r\n        <Section>\r\n          <h2>Contacts</h2>\r\n          <Filter />\r\n          <Contacts />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\nexport default connect(mapStateToProps, null)(App);\r\n","import { combineReducers } from 'redux';\r\n\r\nconst initContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst itemsReducer = (state = initContacts, { type, payload }) => {\r\n  switch (type) {\r\n    case 'contact/getContact':\r\n      const addedName = state\r\n        .map(el => el.name.toLowerCase())\r\n        .includes(payload.name.toLowerCase());\r\n      const addedNumber = state.map(el => el.number).includes(payload.number);\r\n      if (addedName && addedNumber) {\r\n        alert(`${payload.name} is already in contacts!`);\r\n        return state;\r\n      }\r\n      return [...state, payload];\r\n\r\n    case 'contact/deleteContact':\r\n      return state.filter(el => el.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filterReducer = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case 'contact/getFilter':\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst contactReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport const rootReducer = combineReducers({\r\n  contacts: contactReducer,\r\n});\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport { rootReducer } from './contacts/reducers';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3p2SN\",\"button\":\"Form_button__1MC3x\",\"input\":\"Form_input__3_9lF\"};"],"sourceRoot":""}