{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Section/Section.js","redux/contacts/contact-actions.js","components/Filter/Filter.js","components/Form/Form.js","components/Contacts/Contacts.js","App.js","redux/contacts/counter-reducers.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","Section","props","children","className","s","section","addNewContact","createAction","deleteContact","addFilter","connect","dispatch","onAddFilter","e","target","value","filter","type","id","uuidv4","name","onChange","nameInputId","numberInputId","onAddContact","actions","useState","setName","number","setNumber","handleChange","trim","form","onSubmit","preventDefault","contactObject","htmlFor","pattern","title","required","input","button","filteredContacts","allContacts","normalizeFilter","toLowerCase","el","includes","state","contacts","items","onDelete","contact_list","map","contact_item","onClick","length","itemsReducer","createReducer","action","addedContact","addedName","payload","addedNumber","alert","addContact","filterReducer","_","contactReducer","combineReducers","persistConfig","key","storage","blacklist","rootReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","console","log","getState","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f942d75e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"Contacts_contact_list__3Nz54\",\"contact_item\":\"Contacts_contact_item__ElylL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3KEUc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__xko5d\"};","import s from './Section.module.css';\r\nfunction Section(props) {\r\n  const { children } = props;\r\n  return <section className={s.section}>{children}</section>;\r\n}\r\nexport default Section;\r\n","// import * as counterTypes from './counter-types';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addNewContact = createAction('contact / addContact');\r\n// export const addNewContact = contact => ({\r\n//   type: counterTypes.GET_CONTACT,\r\n//   payload: contact,\r\n// });\r\nexport const deleteContact = createAction('contact/deleteContact');\r\n// export const deleteContact = id => ({\r\n//   type: counterTypes.DELETE_CONTACT,\r\n//   payload: id,\r\n// });\r\nexport const addFilter = createAction('contact/getFilter');\r\n// export const addFilter = value => ({\r\n//   type: counterTypes.GET_FILTER,\r\n//   payload: value,\r\n// });\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\n\r\nimport s from './Filter.module.css';\r\nimport { addFilter } from '../../redux/contacts/contact-actions';\r\n\r\nfunction Filter({ onAddFilter }) {\r\n  // const inputId = uuidv4();\r\n  return (\r\n    <label className={s.filter}>\r\n      <div>Find contact by name</div>\r\n      <input type=\"text\" id={uuidv4()} name=\"filter\" onChange={onAddFilter} />\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddFilter: e => dispatch(addFilter(e.target.value)),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n// import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport s from './Form.module.css';\r\nimport * as actions from '../../redux/contacts/contact-actions';\r\n\r\nconst nameInputId = uuidv4();\r\nconst numberInputId = uuidv4();\r\n\r\nfunction Form({ onAddContact }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const contactObject = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n    onAddContact(contactObject);\r\n    resetForm();\r\n  };\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value.trim());\r\n        break;\r\n      case 'number':\r\n        setNumber(value.trim());\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  function resetForm() {\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label htmlFor={nameInputId}>Name</label>\r\n      <input\r\n        id={nameInputId}\r\n        value={name}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <label htmlFor={numberInputId}>Number</label>\r\n      <input\r\n        className={s.input}\r\n        id={numberInputId}\r\n        value={number}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n// Form.propTypes = {\r\n//   onAddContact: PropTypes.func.isRequired,\r\n// };\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddContact: value => dispatch(actions.addNewContact(value)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","// import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport s from './Contacts.module.css';\r\nimport { deleteContact } from '../../redux/contacts/contact-actions';\r\n\r\nfunction Contacts({ contacts, onDelete }) {\r\n  return (\r\n    <ol className={s.contact_list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.contact_item} key={id}>\r\n          {name}:<span>{number}</span>{' '}\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              onDelete(id);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  );\r\n}\r\n// Contacts.propTypes = {\r\n//   contacts: PropTypes.array,\r\n//   deleteContact: PropTypes.func,\r\n// };\r\nconst filteredContacts = (filter, allContacts) => {\r\n  const normalizeFilter = filter.toLowerCase();\r\n  if (filter === '') {\r\n    return allContacts;\r\n  }\r\n  return allContacts.filter(el =>\r\n    el.name.toLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: filteredContacts(state.contacts.filter, state.contacts.items),\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDelete: id => dispatch(deleteContact(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import './App.css';\r\nimport Section from './components/Section/Section';\r\nimport Filter from './components/Filter/Filter';\r\nimport Form from './components/Form';\r\nimport Contacts from './components/Contacts/Contacts';\r\n// import useLocalStorage from './hooks/useLocaleStorage';\r\nimport { connect } from 'react-redux';\r\n// import store from './redux/store';\r\n\r\nfunction App({ contacts }) {\r\n  return (\r\n    <>\r\n      <Section>\r\n        <h1>Phonebook</h1>\r\n        <Form />\r\n      </Section>\r\n      {contacts.length > 0 && (\r\n        <Section>\r\n          <h2>Contacts</h2>\r\n          <Filter />\r\n          <Contacts />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\nexport default connect(mapStateToProps, null)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\n// import * as counterTypes from './counter-types';\r\nimport * as actions from './contact-actions';\r\n\r\nconst initContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\nconst addContact = (contacts, addedContact) => {\r\n  const addedName = contacts\r\n    .map(el => el.name.toLowerCase())\r\n    .includes(addedContact.payload.name.toLowerCase());\r\n  const addedNumber = contacts\r\n    .map(el => el.number)\r\n    .includes(addedContact.payload.number);\r\n  if (addedName && addedNumber) {\r\n    alert(`${addedContact.payload.name} is already in contacts!`);\r\n    return contacts;\r\n  }\r\n  return [...contacts, addedContact.payload];\r\n};\r\n\r\nconst itemsReducer = createReducer(initContacts, {\r\n  [actions.addNewContact]: (state, action) => addContact(state, action),\r\n  [actions.deleteContact]: (state, action) =>\r\n    state.filter(el => el.id !== action.payload),\r\n});\r\n// const itemsReducer = (state = initContacts, { type, payload }) => {\r\n//   switch (type) {\r\n//     case counterTypes.GET_CONTACT:\r\n//       const addedName = state\r\n//         .map(el => el.name.toLowerCase())\r\n//         .includes(payload.name.toLowerCase());\r\n//       const addedNumber = state.map(el => el.number).includes(payload.number);\r\n//       if (addedName && addedNumber) {\r\n//         alert(`${payload.name} is already in contacts!`);\r\n//         return state;\r\n//       }\r\n//       return [...state, payload];\r\n\r\n//     case counterTypes.DELETE_CONTACT:\r\n//       return state.filter(el => el.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nconst filterReducer = createReducer('', {\r\n  [actions.addFilter]: (_, { payload }) => payload,\r\n});\r\n// const filterReducer = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case counterTypes.GET_FILTER:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nexport const contactReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","// import {createStore , combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport { contactReducer } from './contacts/counter-reducers';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactReducer,\r\n// });\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: persistReducer(persistConfig, contactReducer),\r\n});\r\n\r\nconst middleware = getDefaultMiddleware =>\r\n  getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  });\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store, persistor } from './redux/store';\r\nconsole.log(persistor.getState());\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3p2SN\",\"button\":\"Form_button__1MC3x\",\"input\":\"Form_input__3_9lF\"};"],"sourceRoot":""}